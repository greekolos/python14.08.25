name: Run Selenium Tests

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      mode:
        description: "Test mode: all | changed | path | marker"
        required: true
        default: "all"
      test_path:
        description: "Path to tests (if mode=path)"
        required: false
      test_marker:
        description: "Pytest marker (if mode=marker)"
        required: false

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libnss3 libgtk-3-0 libasound2t64
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Install Chrome
        run: |
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome.deb

      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
          CHROMEDRIVER_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$MAJOR_VERSION)
          wget -q -O chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Verify Chrome & Driver
        run: |
          google-chrome --version
          chromedriver --version

      - name: Run tests
        run: |
          python3 --version
          pip3 --version
          python3 -m pytest --version

          # Если запуск от push — принудительно ставим режим "changed"
          if [ "${{ github.event_name }}" = "push" ]; then
            MODE="changed"
          else
            MODE="${{ github.event.inputs.mode }}"
          fi

          PATH_INPUT="${{ github.event.inputs.test_path }}"
          MARKER="${{ github.event.inputs.test_marker }}"

          echo "Event: ${{ github.event_name }}"
          echo "Mode: $MODE"
          echo "Test path: $PATH_INPUT"
          echo "Marker: $MARKER"

          if [[ "$MODE" == "all" ]]; then
            python3 -m pytest

          elif [[ "$MODE" == "changed" ]]; then
            CHANGED_TESTS=$(git diff --name-only HEAD~1 HEAD | grep -E 'tests/.*\.py$' || true)
            echo "Changed test files: $CHANGED_TESTS"
            if [ -n "$CHANGED_TESTS" ]; then
              python3 -m pytest $CHANGED_TESTS
            else
              echo "No changed tests found."
            fi

          elif [[ "$MODE" == "path" ]]; then
            if [ -n "$PATH_INPUT" ]; then
              python3 -m pytest "$PATH_INPUT"
            else
              echo "Error: test_path is empty"
              exit 1
            fi

          elif [[ "$MODE" == "marker" ]]; then
            if [ -n "$MARKER" ]; then
              python3 -m pytest -m "$MARKER"
            else
              echo "Error: test_marker is empty"
              exit 1
            fi

          else
            echo "Invalid mode: $MODE"
            exit 1
          fi

